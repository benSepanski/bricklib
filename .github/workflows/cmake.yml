name: CMake

on:
  push:
    branches: [ r0.1 ]
  pull_request:
    branches: [ r0.1 ]

env:
  # Customize the CMake build type here (Release, Debug, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        USE_MEMFD: [OFF]
        PAGE_UNALIGN: [OFF]
        CUDA_AWARE: [OFF]
        # USE_HIP: [OFF, ON]
        
    env:
      BUILD_DIR: ${{github.workspace}}/build_USE_MEMFD_${{ matrix.USE_MEMFD }}_PAGE_UNALIGN_${{ matrix.PAGE_UNALIGN }}_CUDA_AWARE_${{ matrix.CUDA_AWARE }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Install MPI
      # https://feyziyev007.medium.com/how-to-install-openmpi-on-ubuntu-18-04-cluster-2fb3f03bdf61
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc 
        sudo apt-get install -y openmpi-bin openmpi-common libopenmpi-dev libgtk2.0-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: CMake configuration
      # Build makefiles with the given configuration
      run: |
        cmake -S ${{github.workspace}} \
          -B ${{ env.BUILD_DIR }} \
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -DUSE_MEMFD=${{ matrix.USE_MEMFD }} \
          -DPAGE_UNALIGN=${{ matrix.PAGE_UNALIGN }} \
          -DCUDA_AWARE=${{ matrix.CUDA_AWARE }}
          
    - name: CMake build
      run: cmake --build ${{ env.BUILD_DIR }}

    - name: Test
      working-directory: ${{ env.BUILD_DIR }}
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
